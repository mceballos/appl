<?php

/**
 * This is the model base class for the table "detalles_compromisos".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "DetallesCompromisos".
 *
 * Columns in table "detalles_compromisos" available as properties of the model,
 * followed by relations of table "detalles_compromisos" available as properties of the model.
 *
 * @property integer $id
 * @property integer $compromiso_id
 * @property integer $cuota_numero
 * @property string $fecha_vencimiento 
  * @property integer $estado
 *
 * @property Compromisos $compromiso
 * @property Pagos[] $pagoses
 */
abstract class BaseDetallesCompromisos extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'detalles_compromisos';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Detalle Compromiso|Detalles Compromisos', $n);
	}

	public static function representingColumn() {
		return 'fecha_vencimiento';
	}

	public function rules() {
		return array(
			array('compromiso_id, cuota_numero,monto_cuota,monto_cuota_atraso,fecha_vencimiento', 'required'),
			array('compromiso_id, cuota_numero,monto_cuota,monto_cuota_atraso estado', 'numerical', 'integerOnly'=>true),			
			array('estado', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, compromiso_id,monto_cuota,monto_cuota_atraso,cuota_numero, fecha_vencimiento, estado', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'compromiso' => array(self::BELONGS_TO, 'Compromisos', 'compromiso_id','condition' => 'compromiso.estado = 1'),
			'pagoses' => array(self::HAS_MANY, 'Pagos', 'compromiso_detalle_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'compromiso_id' => null,
			'cuota_numero' => Yii::t('app', 'Cuota Numero'),
			'fecha_vencimiento' => Yii::t('app', 'Fecha Vencimiento'),	
			'monto_cuota_atraso' => Yii::t('app', 'Monto cuota atraso'),   
			'monto_cuota' => Yii::t('app', 'Monto cuota'),   		
			'estado' => Yii::t('app', 'Estado'),
			'compromiso' => null,
			'pagoses' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('compromiso_id', $this->compromiso_id);
		$criteria->compare('cuota_numero', $this->cuota_numero);
		$criteria->compare('fecha_vencimiento', $this->fecha_vencimiento, true);	
        $criteria->compare('monto_cuota', $this->monto_cuota, true);
        $criteria->compare('monto_cuota_atraso', $this->monto_cuota_atraso, true);        	
		$criteria->compare('estado', 1);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
    public function getCuotaAtrasada(){
        $atraso=false;        
        $date1 = new DateTime("now");
        $date2 = date_create($this->fecha_vencimiento);         
        if($date2<$date1){
            $atraso=true;
        }
        return $atraso;           
    }
}